// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class UpdateCheckDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateCheck>
     _instance;
} _UpdateCheck_default_instance_;
class UpdateStatusDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateStatus>
     _instance;
} _UpdateStatus_default_instance_;
class OrgChallengeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<OrgChallenge>
     _instance;
} _OrgChallenge_default_instance_;
class DeviceChallengeDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<DeviceChallenge>
     _instance;
} _DeviceChallenge_default_instance_;
class UpdatingOrgResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdatingOrgResponse>
     _instance;
} _UpdatingOrgResponse_default_instance_;
class ConfirmingOrgResponseDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConfirmingOrgResponse>
     _instance;
} _ConfirmingOrgResponse_default_instance_;
class M1DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<M1>
     _instance;
} _M1_default_instance_;
class M2DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<M2>
     _instance;
} _M2_default_instance_;
class M3DefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<M3>
     _instance;
} _M3_default_instance_;
class UpdateImageDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<UpdateImage>
     _instance;
} _UpdateImage_default_instance_;

namespace protobuf_protocol_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[10];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCheck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCheck, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateCheck, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateStatus, successful_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrgChallenge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrgChallenge, ng_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrgChallenge, ig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceChallenge, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceChallenge, ng_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceChallenge, nd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DeviceChallenge, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatingOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatingOrgResponse, nd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdatingOrgResponse, ig_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmingOrgResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmingOrgResponse, nd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmingOrgResponse, ig_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConfirmingOrgResponse, hc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M1, v_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M1, oc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M2, dc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(M3, or__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateImage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateImage, size_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(UpdateCheck)},
  { 7, -1, sizeof(UpdateStatus)},
  { 13, -1, sizeof(OrgChallenge)},
  { 20, -1, sizeof(DeviceChallenge)},
  { 28, -1, sizeof(UpdatingOrgResponse)},
  { 35, -1, sizeof(ConfirmingOrgResponse)},
  { 43, -1, sizeof(M1)},
  { 50, -1, sizeof(M2)},
  { 56, -1, sizeof(M3)},
  { 62, -1, sizeof(UpdateImage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateCheck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OrgChallenge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DeviceChallenge_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdatingOrgResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConfirmingOrgResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_M1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_M2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_M3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateImage_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "protocol.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _UpdateCheck_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateCheck_default_instance_);_UpdateStatus_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateStatus_default_instance_);_OrgChallenge_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_OrgChallenge_default_instance_);_DeviceChallenge_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_DeviceChallenge_default_instance_);_UpdatingOrgResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdatingOrgResponse_default_instance_);_ConfirmingOrgResponse_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConfirmingOrgResponse_default_instance_);_M1_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_M1_default_instance_);_M2_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_M2_default_instance_);_M3_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_M3_default_instance_);_UpdateImage_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_UpdateImage_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016protocol.proto\"$\n\013UpdateCheck\022\t\n\001V\030\001 \001"
      "(\r\022\n\n\002ID\030\002 \001(\r\"\"\n\014UpdateStatus\022\022\n\nsucces"
      "sful\030\001 \001(\010\"&\n\014OrgChallenge\022\n\n\002NG\030\001 \001(\004\022\n"
      "\n\002IG\030\002 \001(\r\"5\n\017DeviceChallenge\022\n\n\002NG\030\001 \001("
      "\004\022\n\n\002ND\030\002 \001(\004\022\n\n\002ID\030\003 \001(\r\"-\n\023UpdatingOrg"
      "Response\022\n\n\002ND\030\001 \001(\004\022\n\n\002IG\030\002 \001(\r\";\n\025Conf"
      "irmingOrgResponse\022\n\n\002ND\030\001 \001(\004\022\n\n\002IG\030\002 \001("
      "\r\022\n\n\002HC\030\003 \001(\014\"\033\n\002M1\022\t\n\001V\030\001 \001(\r\022\n\n\002OC\030\002 \001"
      "(\014\"\020\n\002M2\022\n\n\002DC\030\001 \001(\014\"\020\n\002M3\022\n\n\002OR\030\001 \001(\014\"\033"
      "\n\013UpdateImage\022\014\n\004size\030\001 \001(\rb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 395);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_protocol_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCheck::kVFieldNumber;
const int UpdateCheck::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCheck::UpdateCheck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateCheck)
}
UpdateCheck::UpdateCheck(const UpdateCheck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&v_, &from.v_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&v_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:UpdateCheck)
}

void UpdateCheck::SharedCtor() {
  ::memset(&v_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&v_)) + sizeof(id_));
  _cached_size_ = 0;
}

UpdateCheck::~UpdateCheck() {
  // @@protoc_insertion_point(destructor:UpdateCheck)
  SharedDtor();
}

void UpdateCheck::SharedDtor() {
}

void UpdateCheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateCheck::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateCheck& UpdateCheck::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateCheck* UpdateCheck::New(::google::protobuf::Arena* arena) const {
  UpdateCheck* n = new UpdateCheck;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateCheck::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&v_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&v_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool UpdateCheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateCheck)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 V = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateCheck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateCheck)
  return false;
#undef DO_
}

void UpdateCheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 V = 1;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->v(), output);
  }

  // uint32 ID = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateCheck)
}

::google::protobuf::uint8* UpdateCheck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateCheck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 V = 1;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->v(), target);
  }

  // uint32 ID = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateCheck)
  return target;
}

size_t UpdateCheck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateCheck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 V = 1;
  if (this->v() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->v());
  }

  // uint32 ID = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateCheck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateCheck)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCheck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateCheck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateCheck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateCheck)
    MergeFrom(*source);
  }
}

void UpdateCheck::MergeFrom(const UpdateCheck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateCheck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.v() != 0) {
    set_v(from.v());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void UpdateCheck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCheck::CopyFrom(const UpdateCheck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateCheck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCheck::IsInitialized() const {
  return true;
}

void UpdateCheck::Swap(UpdateCheck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateCheck::InternalSwap(UpdateCheck* other) {
  using std::swap;
  swap(v_, other->v_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateCheck::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateCheck

// uint32 V = 1;
void UpdateCheck::clear_v() {
  v_ = 0u;
}
::google::protobuf::uint32 UpdateCheck::v() const {
  // @@protoc_insertion_point(field_get:UpdateCheck.V)
  return v_;
}
void UpdateCheck::set_v(::google::protobuf::uint32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:UpdateCheck.V)
}

// uint32 ID = 2;
void UpdateCheck::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 UpdateCheck::id() const {
  // @@protoc_insertion_point(field_get:UpdateCheck.ID)
  return id_;
}
void UpdateCheck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:UpdateCheck.ID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateStatus::kSuccessfulFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateStatus::UpdateStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateStatus)
}
UpdateStatus::UpdateStatus(const UpdateStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  successful_ = from.successful_;
  // @@protoc_insertion_point(copy_constructor:UpdateStatus)
}

void UpdateStatus::SharedCtor() {
  successful_ = false;
  _cached_size_ = 0;
}

UpdateStatus::~UpdateStatus() {
  // @@protoc_insertion_point(destructor:UpdateStatus)
  SharedDtor();
}

void UpdateStatus::SharedDtor() {
}

void UpdateStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateStatus::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateStatus& UpdateStatus::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateStatus* UpdateStatus::New(::google::protobuf::Arena* arena) const {
  UpdateStatus* n = new UpdateStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  successful_ = false;
  _internal_metadata_.Clear();
}

bool UpdateStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool successful = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &successful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateStatus)
  return false;
#undef DO_
}

void UpdateStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool successful = 1;
  if (this->successful() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->successful(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateStatus)
}

::google::protobuf::uint8* UpdateStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool successful = 1;
  if (this->successful() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->successful(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateStatus)
  return target;
}

size_t UpdateStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateStatus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool successful = 1;
  if (this->successful() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateStatus)
    MergeFrom(*source);
  }
}

void UpdateStatus::MergeFrom(const UpdateStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.successful() != 0) {
    set_successful(from.successful());
  }
}

void UpdateStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateStatus::CopyFrom(const UpdateStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateStatus::IsInitialized() const {
  return true;
}

void UpdateStatus::Swap(UpdateStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateStatus::InternalSwap(UpdateStatus* other) {
  using std::swap;
  swap(successful_, other->successful_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateStatus::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateStatus

// bool successful = 1;
void UpdateStatus::clear_successful() {
  successful_ = false;
}
bool UpdateStatus::successful() const {
  // @@protoc_insertion_point(field_get:UpdateStatus.successful)
  return successful_;
}
void UpdateStatus::set_successful(bool value) {
  
  successful_ = value;
  // @@protoc_insertion_point(field_set:UpdateStatus.successful)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OrgChallenge::kNGFieldNumber;
const int OrgChallenge::kIGFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OrgChallenge::OrgChallenge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:OrgChallenge)
}
OrgChallenge::OrgChallenge(const OrgChallenge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ng_, &from.ng_,
    static_cast<size_t>(reinterpret_cast<char*>(&ig_) -
    reinterpret_cast<char*>(&ng_)) + sizeof(ig_));
  // @@protoc_insertion_point(copy_constructor:OrgChallenge)
}

void OrgChallenge::SharedCtor() {
  ::memset(&ng_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ig_) -
      reinterpret_cast<char*>(&ng_)) + sizeof(ig_));
  _cached_size_ = 0;
}

OrgChallenge::~OrgChallenge() {
  // @@protoc_insertion_point(destructor:OrgChallenge)
  SharedDtor();
}

void OrgChallenge::SharedDtor() {
}

void OrgChallenge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrgChallenge::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OrgChallenge& OrgChallenge::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

OrgChallenge* OrgChallenge::New(::google::protobuf::Arena* arena) const {
  OrgChallenge* n = new OrgChallenge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OrgChallenge::Clear() {
// @@protoc_insertion_point(message_clear_start:OrgChallenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ng_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ig_) -
      reinterpret_cast<char*>(&ng_)) + sizeof(ig_));
  _internal_metadata_.Clear();
}

bool OrgChallenge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:OrgChallenge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 NG = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ng_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IG = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ig_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:OrgChallenge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:OrgChallenge)
  return false;
#undef DO_
}

void OrgChallenge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:OrgChallenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 NG = 1;
  if (this->ng() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ng(), output);
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ig(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:OrgChallenge)
}

::google::protobuf::uint8* OrgChallenge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:OrgChallenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 NG = 1;
  if (this->ng() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ng(), target);
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ig(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OrgChallenge)
  return target;
}

size_t OrgChallenge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OrgChallenge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 NG = 1;
  if (this->ng() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ng());
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ig());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrgChallenge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:OrgChallenge)
  GOOGLE_DCHECK_NE(&from, this);
  const OrgChallenge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OrgChallenge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:OrgChallenge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:OrgChallenge)
    MergeFrom(*source);
  }
}

void OrgChallenge::MergeFrom(const OrgChallenge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:OrgChallenge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ng() != 0) {
    set_ng(from.ng());
  }
  if (from.ig() != 0) {
    set_ig(from.ig());
  }
}

void OrgChallenge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:OrgChallenge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrgChallenge::CopyFrom(const OrgChallenge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OrgChallenge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrgChallenge::IsInitialized() const {
  return true;
}

void OrgChallenge::Swap(OrgChallenge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OrgChallenge::InternalSwap(OrgChallenge* other) {
  using std::swap;
  swap(ng_, other->ng_);
  swap(ig_, other->ig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OrgChallenge::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OrgChallenge

// uint64 NG = 1;
void OrgChallenge::clear_ng() {
  ng_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 OrgChallenge::ng() const {
  // @@protoc_insertion_point(field_get:OrgChallenge.NG)
  return ng_;
}
void OrgChallenge::set_ng(::google::protobuf::uint64 value) {
  
  ng_ = value;
  // @@protoc_insertion_point(field_set:OrgChallenge.NG)
}

// uint32 IG = 2;
void OrgChallenge::clear_ig() {
  ig_ = 0u;
}
::google::protobuf::uint32 OrgChallenge::ig() const {
  // @@protoc_insertion_point(field_get:OrgChallenge.IG)
  return ig_;
}
void OrgChallenge::set_ig(::google::protobuf::uint32 value) {
  
  ig_ = value;
  // @@protoc_insertion_point(field_set:OrgChallenge.IG)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DeviceChallenge::kNGFieldNumber;
const int DeviceChallenge::kNDFieldNumber;
const int DeviceChallenge::kIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DeviceChallenge::DeviceChallenge()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DeviceChallenge)
}
DeviceChallenge::DeviceChallenge(const DeviceChallenge& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ng_, &from.ng_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&ng_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:DeviceChallenge)
}

void DeviceChallenge::SharedCtor() {
  ::memset(&ng_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&ng_)) + sizeof(id_));
  _cached_size_ = 0;
}

DeviceChallenge::~DeviceChallenge() {
  // @@protoc_insertion_point(destructor:DeviceChallenge)
  SharedDtor();
}

void DeviceChallenge::SharedDtor() {
}

void DeviceChallenge::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DeviceChallenge::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DeviceChallenge& DeviceChallenge::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

DeviceChallenge* DeviceChallenge::New(::google::protobuf::Arena* arena) const {
  DeviceChallenge* n = new DeviceChallenge;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DeviceChallenge::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceChallenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ng_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&ng_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool DeviceChallenge::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DeviceChallenge)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 NG = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ng_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ND = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 ID = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DeviceChallenge)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DeviceChallenge)
  return false;
#undef DO_
}

void DeviceChallenge::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DeviceChallenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 NG = 1;
  if (this->ng() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->ng(), output);
  }

  // uint64 ND = 2;
  if (this->nd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nd(), output);
  }

  // uint32 ID = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DeviceChallenge)
}

::google::protobuf::uint8* DeviceChallenge::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DeviceChallenge)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 NG = 1;
  if (this->ng() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->ng(), target);
  }

  // uint64 ND = 2;
  if (this->nd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nd(), target);
  }

  // uint32 ID = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceChallenge)
  return target;
}

size_t DeviceChallenge::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceChallenge)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 NG = 1;
  if (this->ng() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ng());
  }

  // uint64 ND = 2;
  if (this->nd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nd());
  }

  // uint32 ID = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DeviceChallenge::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DeviceChallenge)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceChallenge* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DeviceChallenge>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DeviceChallenge)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DeviceChallenge)
    MergeFrom(*source);
  }
}

void DeviceChallenge::MergeFrom(const DeviceChallenge& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DeviceChallenge)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ng() != 0) {
    set_ng(from.ng());
  }
  if (from.nd() != 0) {
    set_nd(from.nd());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void DeviceChallenge::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DeviceChallenge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceChallenge::CopyFrom(const DeviceChallenge& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceChallenge)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceChallenge::IsInitialized() const {
  return true;
}

void DeviceChallenge::Swap(DeviceChallenge* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DeviceChallenge::InternalSwap(DeviceChallenge* other) {
  using std::swap;
  swap(ng_, other->ng_);
  swap(nd_, other->nd_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DeviceChallenge::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DeviceChallenge

// uint64 NG = 1;
void DeviceChallenge::clear_ng() {
  ng_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DeviceChallenge::ng() const {
  // @@protoc_insertion_point(field_get:DeviceChallenge.NG)
  return ng_;
}
void DeviceChallenge::set_ng(::google::protobuf::uint64 value) {
  
  ng_ = value;
  // @@protoc_insertion_point(field_set:DeviceChallenge.NG)
}

// uint64 ND = 2;
void DeviceChallenge::clear_nd() {
  nd_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DeviceChallenge::nd() const {
  // @@protoc_insertion_point(field_get:DeviceChallenge.ND)
  return nd_;
}
void DeviceChallenge::set_nd(::google::protobuf::uint64 value) {
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:DeviceChallenge.ND)
}

// uint32 ID = 3;
void DeviceChallenge::clear_id() {
  id_ = 0u;
}
::google::protobuf::uint32 DeviceChallenge::id() const {
  // @@protoc_insertion_point(field_get:DeviceChallenge.ID)
  return id_;
}
void DeviceChallenge::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:DeviceChallenge.ID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdatingOrgResponse::kNDFieldNumber;
const int UpdatingOrgResponse::kIGFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdatingOrgResponse::UpdatingOrgResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdatingOrgResponse)
}
UpdatingOrgResponse::UpdatingOrgResponse(const UpdatingOrgResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nd_, &from.nd_,
    static_cast<size_t>(reinterpret_cast<char*>(&ig_) -
    reinterpret_cast<char*>(&nd_)) + sizeof(ig_));
  // @@protoc_insertion_point(copy_constructor:UpdatingOrgResponse)
}

void UpdatingOrgResponse::SharedCtor() {
  ::memset(&nd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ig_) -
      reinterpret_cast<char*>(&nd_)) + sizeof(ig_));
  _cached_size_ = 0;
}

UpdatingOrgResponse::~UpdatingOrgResponse() {
  // @@protoc_insertion_point(destructor:UpdatingOrgResponse)
  SharedDtor();
}

void UpdatingOrgResponse::SharedDtor() {
}

void UpdatingOrgResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdatingOrgResponse::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdatingOrgResponse& UpdatingOrgResponse::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdatingOrgResponse* UpdatingOrgResponse::New(::google::protobuf::Arena* arena) const {
  UpdatingOrgResponse* n = new UpdatingOrgResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdatingOrgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdatingOrgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&nd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ig_) -
      reinterpret_cast<char*>(&nd_)) + sizeof(ig_));
  _internal_metadata_.Clear();
}

bool UpdatingOrgResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdatingOrgResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ND = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IG = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ig_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdatingOrgResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdatingOrgResponse)
  return false;
#undef DO_
}

void UpdatingOrgResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdatingOrgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ND = 1;
  if (this->nd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nd(), output);
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ig(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdatingOrgResponse)
}

::google::protobuf::uint8* UpdatingOrgResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdatingOrgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ND = 1;
  if (this->nd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nd(), target);
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ig(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdatingOrgResponse)
  return target;
}

size_t UpdatingOrgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdatingOrgResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 ND = 1;
  if (this->nd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nd());
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ig());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdatingOrgResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdatingOrgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdatingOrgResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdatingOrgResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdatingOrgResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdatingOrgResponse)
    MergeFrom(*source);
  }
}

void UpdatingOrgResponse::MergeFrom(const UpdatingOrgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdatingOrgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.nd() != 0) {
    set_nd(from.nd());
  }
  if (from.ig() != 0) {
    set_ig(from.ig());
  }
}

void UpdatingOrgResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdatingOrgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdatingOrgResponse::CopyFrom(const UpdatingOrgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdatingOrgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdatingOrgResponse::IsInitialized() const {
  return true;
}

void UpdatingOrgResponse::Swap(UpdatingOrgResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdatingOrgResponse::InternalSwap(UpdatingOrgResponse* other) {
  using std::swap;
  swap(nd_, other->nd_);
  swap(ig_, other->ig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdatingOrgResponse::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdatingOrgResponse

// uint64 ND = 1;
void UpdatingOrgResponse::clear_nd() {
  nd_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 UpdatingOrgResponse::nd() const {
  // @@protoc_insertion_point(field_get:UpdatingOrgResponse.ND)
  return nd_;
}
void UpdatingOrgResponse::set_nd(::google::protobuf::uint64 value) {
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:UpdatingOrgResponse.ND)
}

// uint32 IG = 2;
void UpdatingOrgResponse::clear_ig() {
  ig_ = 0u;
}
::google::protobuf::uint32 UpdatingOrgResponse::ig() const {
  // @@protoc_insertion_point(field_get:UpdatingOrgResponse.IG)
  return ig_;
}
void UpdatingOrgResponse::set_ig(::google::protobuf::uint32 value) {
  
  ig_ = value;
  // @@protoc_insertion_point(field_set:UpdatingOrgResponse.IG)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfirmingOrgResponse::kNDFieldNumber;
const int ConfirmingOrgResponse::kIGFieldNumber;
const int ConfirmingOrgResponse::kHCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfirmingOrgResponse::ConfirmingOrgResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ConfirmingOrgResponse)
}
ConfirmingOrgResponse::ConfirmingOrgResponse(const ConfirmingOrgResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hc().size() > 0) {
    hc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hc_);
  }
  ::memcpy(&nd_, &from.nd_,
    static_cast<size_t>(reinterpret_cast<char*>(&ig_) -
    reinterpret_cast<char*>(&nd_)) + sizeof(ig_));
  // @@protoc_insertion_point(copy_constructor:ConfirmingOrgResponse)
}

void ConfirmingOrgResponse::SharedCtor() {
  hc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ig_) -
      reinterpret_cast<char*>(&nd_)) + sizeof(ig_));
  _cached_size_ = 0;
}

ConfirmingOrgResponse::~ConfirmingOrgResponse() {
  // @@protoc_insertion_point(destructor:ConfirmingOrgResponse)
  SharedDtor();
}

void ConfirmingOrgResponse::SharedDtor() {
  hc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConfirmingOrgResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfirmingOrgResponse::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfirmingOrgResponse& ConfirmingOrgResponse::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConfirmingOrgResponse* ConfirmingOrgResponse::New(::google::protobuf::Arena* arena) const {
  ConfirmingOrgResponse* n = new ConfirmingOrgResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfirmingOrgResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ConfirmingOrgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ig_) -
      reinterpret_cast<char*>(&nd_)) + sizeof(ig_));
  _internal_metadata_.Clear();
}

bool ConfirmingOrgResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ConfirmingOrgResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ND = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 IG = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ig_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes HC = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ConfirmingOrgResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ConfirmingOrgResponse)
  return false;
#undef DO_
}

void ConfirmingOrgResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ConfirmingOrgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ND = 1;
  if (this->nd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nd(), output);
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ig(), output);
  }

  // bytes HC = 3;
  if (this->hc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->hc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ConfirmingOrgResponse)
}

::google::protobuf::uint8* ConfirmingOrgResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ConfirmingOrgResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ND = 1;
  if (this->nd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nd(), target);
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ig(), target);
  }

  // bytes HC = 3;
  if (this->hc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->hc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ConfirmingOrgResponse)
  return target;
}

size_t ConfirmingOrgResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ConfirmingOrgResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes HC = 3;
  if (this->hc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hc());
  }

  // uint64 ND = 1;
  if (this->nd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nd());
  }

  // uint32 IG = 2;
  if (this->ig() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ig());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfirmingOrgResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ConfirmingOrgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfirmingOrgResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfirmingOrgResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ConfirmingOrgResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ConfirmingOrgResponse)
    MergeFrom(*source);
  }
}

void ConfirmingOrgResponse::MergeFrom(const ConfirmingOrgResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ConfirmingOrgResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hc().size() > 0) {

    hc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hc_);
  }
  if (from.nd() != 0) {
    set_nd(from.nd());
  }
  if (from.ig() != 0) {
    set_ig(from.ig());
  }
}

void ConfirmingOrgResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ConfirmingOrgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfirmingOrgResponse::CopyFrom(const ConfirmingOrgResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ConfirmingOrgResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfirmingOrgResponse::IsInitialized() const {
  return true;
}

void ConfirmingOrgResponse::Swap(ConfirmingOrgResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfirmingOrgResponse::InternalSwap(ConfirmingOrgResponse* other) {
  using std::swap;
  hc_.Swap(&other->hc_);
  swap(nd_, other->nd_);
  swap(ig_, other->ig_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfirmingOrgResponse::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfirmingOrgResponse

// uint64 ND = 1;
void ConfirmingOrgResponse::clear_nd() {
  nd_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ConfirmingOrgResponse::nd() const {
  // @@protoc_insertion_point(field_get:ConfirmingOrgResponse.ND)
  return nd_;
}
void ConfirmingOrgResponse::set_nd(::google::protobuf::uint64 value) {
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:ConfirmingOrgResponse.ND)
}

// uint32 IG = 2;
void ConfirmingOrgResponse::clear_ig() {
  ig_ = 0u;
}
::google::protobuf::uint32 ConfirmingOrgResponse::ig() const {
  // @@protoc_insertion_point(field_get:ConfirmingOrgResponse.IG)
  return ig_;
}
void ConfirmingOrgResponse::set_ig(::google::protobuf::uint32 value) {
  
  ig_ = value;
  // @@protoc_insertion_point(field_set:ConfirmingOrgResponse.IG)
}

// bytes HC = 3;
void ConfirmingOrgResponse::clear_hc() {
  hc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ConfirmingOrgResponse::hc() const {
  // @@protoc_insertion_point(field_get:ConfirmingOrgResponse.HC)
  return hc_.GetNoArena();
}
void ConfirmingOrgResponse::set_hc(const ::std::string& value) {
  
  hc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfirmingOrgResponse.HC)
}
#if LANG_CXX11
void ConfirmingOrgResponse::set_hc(::std::string&& value) {
  
  hc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfirmingOrgResponse.HC)
}
#endif
void ConfirmingOrgResponse::set_hc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfirmingOrgResponse.HC)
}
void ConfirmingOrgResponse::set_hc(const void* value, size_t size) {
  
  hc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfirmingOrgResponse.HC)
}
::std::string* ConfirmingOrgResponse::mutable_hc() {
  
  // @@protoc_insertion_point(field_mutable:ConfirmingOrgResponse.HC)
  return hc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ConfirmingOrgResponse::release_hc() {
  // @@protoc_insertion_point(field_release:ConfirmingOrgResponse.HC)
  
  return hc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ConfirmingOrgResponse::set_allocated_hc(::std::string* hc) {
  if (hc != NULL) {
    
  } else {
    
  }
  hc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hc);
  // @@protoc_insertion_point(field_set_allocated:ConfirmingOrgResponse.HC)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int M1::kVFieldNumber;
const int M1::kOCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

M1::M1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:M1)
}
M1::M1(const M1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oc().size() > 0) {
    oc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oc_);
  }
  v_ = from.v_;
  // @@protoc_insertion_point(copy_constructor:M1)
}

void M1::SharedCtor() {
  oc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_ = 0u;
  _cached_size_ = 0;
}

M1::~M1() {
  // @@protoc_insertion_point(destructor:M1)
  SharedDtor();
}

void M1::SharedDtor() {
  oc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void M1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* M1::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const M1& M1::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

M1* M1::New(::google::protobuf::Arena* arena) const {
  M1* n = new M1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void M1::Clear() {
// @@protoc_insertion_point(message_clear_start:M1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  v_ = 0u;
  _internal_metadata_.Clear();
}

bool M1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:M1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 V = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &v_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes OC = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:M1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:M1)
  return false;
#undef DO_
}

void M1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:M1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 V = 1;
  if (this->v() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->v(), output);
  }

  // bytes OC = 2;
  if (this->oc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->oc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:M1)
}

::google::protobuf::uint8* M1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:M1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 V = 1;
  if (this->v() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->v(), target);
  }

  // bytes OC = 2;
  if (this->oc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->oc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:M1)
  return target;
}

size_t M1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:M1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes OC = 2;
  if (this->oc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oc());
  }

  // uint32 V = 1;
  if (this->v() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->v());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void M1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:M1)
  GOOGLE_DCHECK_NE(&from, this);
  const M1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const M1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:M1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:M1)
    MergeFrom(*source);
  }
}

void M1::MergeFrom(const M1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:M1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oc().size() > 0) {

    oc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oc_);
  }
  if (from.v() != 0) {
    set_v(from.v());
  }
}

void M1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:M1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void M1::CopyFrom(const M1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:M1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool M1::IsInitialized() const {
  return true;
}

void M1::Swap(M1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void M1::InternalSwap(M1* other) {
  using std::swap;
  oc_.Swap(&other->oc_);
  swap(v_, other->v_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata M1::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// M1

// uint32 V = 1;
void M1::clear_v() {
  v_ = 0u;
}
::google::protobuf::uint32 M1::v() const {
  // @@protoc_insertion_point(field_get:M1.V)
  return v_;
}
void M1::set_v(::google::protobuf::uint32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:M1.V)
}

// bytes OC = 2;
void M1::clear_oc() {
  oc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& M1::oc() const {
  // @@protoc_insertion_point(field_get:M1.OC)
  return oc_.GetNoArena();
}
void M1::set_oc(const ::std::string& value) {
  
  oc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:M1.OC)
}
#if LANG_CXX11
void M1::set_oc(::std::string&& value) {
  
  oc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:M1.OC)
}
#endif
void M1::set_oc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:M1.OC)
}
void M1::set_oc(const void* value, size_t size) {
  
  oc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:M1.OC)
}
::std::string* M1::mutable_oc() {
  
  // @@protoc_insertion_point(field_mutable:M1.OC)
  return oc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* M1::release_oc() {
  // @@protoc_insertion_point(field_release:M1.OC)
  
  return oc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void M1::set_allocated_oc(::std::string* oc) {
  if (oc != NULL) {
    
  } else {
    
  }
  oc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oc);
  // @@protoc_insertion_point(field_set_allocated:M1.OC)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int M2::kDCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

M2::M2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:M2)
}
M2::M2(const M2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dc().size() > 0) {
    dc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dc_);
  }
  // @@protoc_insertion_point(copy_constructor:M2)
}

void M2::SharedCtor() {
  dc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

M2::~M2() {
  // @@protoc_insertion_point(destructor:M2)
  SharedDtor();
}

void M2::SharedDtor() {
  dc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void M2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* M2::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const M2& M2::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

M2* M2::New(::google::protobuf::Arena* arena) const {
  M2* n = new M2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void M2::Clear() {
// @@protoc_insertion_point(message_clear_start:M2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool M2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:M2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes DC = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_dc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:M2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:M2)
  return false;
#undef DO_
}

void M2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:M2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes DC = 1;
  if (this->dc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->dc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:M2)
}

::google::protobuf::uint8* M2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:M2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes DC = 1;
  if (this->dc().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->dc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:M2)
  return target;
}

size_t M2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:M2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes DC = 1;
  if (this->dc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->dc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void M2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:M2)
  GOOGLE_DCHECK_NE(&from, this);
  const M2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const M2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:M2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:M2)
    MergeFrom(*source);
  }
}

void M2::MergeFrom(const M2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:M2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dc().size() > 0) {

    dc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dc_);
  }
}

void M2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:M2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void M2::CopyFrom(const M2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:M2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool M2::IsInitialized() const {
  return true;
}

void M2::Swap(M2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void M2::InternalSwap(M2* other) {
  using std::swap;
  dc_.Swap(&other->dc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata M2::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// M2

// bytes DC = 1;
void M2::clear_dc() {
  dc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& M2::dc() const {
  // @@protoc_insertion_point(field_get:M2.DC)
  return dc_.GetNoArena();
}
void M2::set_dc(const ::std::string& value) {
  
  dc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:M2.DC)
}
#if LANG_CXX11
void M2::set_dc(::std::string&& value) {
  
  dc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:M2.DC)
}
#endif
void M2::set_dc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:M2.DC)
}
void M2::set_dc(const void* value, size_t size) {
  
  dc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:M2.DC)
}
::std::string* M2::mutable_dc() {
  
  // @@protoc_insertion_point(field_mutable:M2.DC)
  return dc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* M2::release_dc() {
  // @@protoc_insertion_point(field_release:M2.DC)
  
  return dc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void M2::set_allocated_dc(::std::string* dc) {
  if (dc != NULL) {
    
  } else {
    
  }
  dc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dc);
  // @@protoc_insertion_point(field_set_allocated:M2.DC)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int M3::kORFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

M3::M3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:M3)
}
M3::M3(const M3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  or__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.or_().size() > 0) {
    or__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.or__);
  }
  // @@protoc_insertion_point(copy_constructor:M3)
}

void M3::SharedCtor() {
  or__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

M3::~M3() {
  // @@protoc_insertion_point(destructor:M3)
  SharedDtor();
}

void M3::SharedDtor() {
  or__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void M3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* M3::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const M3& M3::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

M3* M3::New(::google::protobuf::Arena* arena) const {
  M3* n = new M3;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void M3::Clear() {
// @@protoc_insertion_point(message_clear_start:M3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  or__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool M3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:M3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes OR = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_or_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:M3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:M3)
  return false;
#undef DO_
}

void M3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:M3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes OR = 1;
  if (this->or_().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->or_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:M3)
}

::google::protobuf::uint8* M3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:M3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes OR = 1;
  if (this->or_().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->or_(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:M3)
  return target;
}

size_t M3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:M3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes OR = 1;
  if (this->or_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->or_());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void M3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:M3)
  GOOGLE_DCHECK_NE(&from, this);
  const M3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const M3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:M3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:M3)
    MergeFrom(*source);
  }
}

void M3::MergeFrom(const M3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:M3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.or_().size() > 0) {

    or__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.or__);
  }
}

void M3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:M3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void M3::CopyFrom(const M3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:M3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool M3::IsInitialized() const {
  return true;
}

void M3::Swap(M3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void M3::InternalSwap(M3* other) {
  using std::swap;
  or__.Swap(&other->or__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata M3::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// M3

// bytes OR = 1;
void M3::clear_or_() {
  or__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& M3::or_() const {
  // @@protoc_insertion_point(field_get:M3.OR)
  return or__.GetNoArena();
}
void M3::set_or_(const ::std::string& value) {
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:M3.OR)
}
#if LANG_CXX11
void M3::set_or_(::std::string&& value) {
  
  or__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:M3.OR)
}
#endif
void M3::set_or_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:M3.OR)
}
void M3::set_or_(const void* value, size_t size) {
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:M3.OR)
}
::std::string* M3::mutable_or_() {
  
  // @@protoc_insertion_point(field_mutable:M3.OR)
  return or__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* M3::release_or_() {
  // @@protoc_insertion_point(field_release:M3.OR)
  
  return or__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void M3::set_allocated_or_(::std::string* or_) {
  if (or_ != NULL) {
    
  } else {
    
  }
  or__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), or_);
  // @@protoc_insertion_point(field_set_allocated:M3.OR)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateImage::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateImage::UpdateImage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_protocol_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:UpdateImage)
}
UpdateImage::UpdateImage(const UpdateImage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:UpdateImage)
}

void UpdateImage::SharedCtor() {
  size_ = 0u;
  _cached_size_ = 0;
}

UpdateImage::~UpdateImage() {
  // @@protoc_insertion_point(destructor:UpdateImage)
  SharedDtor();
}

void UpdateImage::SharedDtor() {
}

void UpdateImage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateImage::descriptor() {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateImage& UpdateImage::default_instance() {
  protobuf_protocol_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateImage* UpdateImage::New(::google::protobuf::Arena* arena) const {
  UpdateImage* n = new UpdateImage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateImage::Clear() {
// @@protoc_insertion_point(message_clear_start:UpdateImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  size_ = 0u;
  _internal_metadata_.Clear();
}

bool UpdateImage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UpdateImage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UpdateImage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UpdateImage)
  return false;
#undef DO_
}

void UpdateImage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UpdateImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 size = 1;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:UpdateImage)
}

::google::protobuf::uint8* UpdateImage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:UpdateImage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 size = 1;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpdateImage)
  return target;
}

size_t UpdateImage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpdateImage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateImage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:UpdateImage)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateImage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateImage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:UpdateImage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:UpdateImage)
    MergeFrom(*source);
  }
}

void UpdateImage::MergeFrom(const UpdateImage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:UpdateImage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.size() != 0) {
    set_size(from.size());
  }
}

void UpdateImage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:UpdateImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateImage::CopyFrom(const UpdateImage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpdateImage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateImage::IsInitialized() const {
  return true;
}

void UpdateImage::Swap(UpdateImage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateImage::InternalSwap(UpdateImage* other) {
  using std::swap;
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateImage::GetMetadata() const {
  protobuf_protocol_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protocol_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateImage

// uint32 size = 1;
void UpdateImage::clear_size() {
  size_ = 0u;
}
::google::protobuf::uint32 UpdateImage::size() const {
  // @@protoc_insertion_point(field_get:UpdateImage.size)
  return size_;
}
void UpdateImage::set_size(::google::protobuf::uint32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:UpdateImage.size)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
