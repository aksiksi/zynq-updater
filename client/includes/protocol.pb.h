// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol.proto

#ifndef PROTOBUF_protocol_2eproto__INCLUDED
#define PROTOBUF_protocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class ConfirmingOrgResponse;
class ConfirmingOrgResponseDefaultTypeInternal;
extern ConfirmingOrgResponseDefaultTypeInternal _ConfirmingOrgResponse_default_instance_;
class DeviceChallenge;
class DeviceChallengeDefaultTypeInternal;
extern DeviceChallengeDefaultTypeInternal _DeviceChallenge_default_instance_;
class M1;
class M1DefaultTypeInternal;
extern M1DefaultTypeInternal _M1_default_instance_;
class M2;
class M2DefaultTypeInternal;
extern M2DefaultTypeInternal _M2_default_instance_;
class M3;
class M3DefaultTypeInternal;
extern M3DefaultTypeInternal _M3_default_instance_;
class OrgChallenge;
class OrgChallengeDefaultTypeInternal;
extern OrgChallengeDefaultTypeInternal _OrgChallenge_default_instance_;
class UpdateCheck;
class UpdateCheckDefaultTypeInternal;
extern UpdateCheckDefaultTypeInternal _UpdateCheck_default_instance_;
class UpdateStatus;
class UpdateStatusDefaultTypeInternal;
extern UpdateStatusDefaultTypeInternal _UpdateStatus_default_instance_;
class UpdatingOrgResponse;
class UpdatingOrgResponseDefaultTypeInternal;
extern UpdatingOrgResponseDefaultTypeInternal _UpdatingOrgResponse_default_instance_;

namespace protobuf_protocol_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_protocol_2eproto

// ===================================================================

class UpdateCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateCheck) */ {
 public:
  UpdateCheck();
  virtual ~UpdateCheck();

  UpdateCheck(const UpdateCheck& from);

  inline UpdateCheck& operator=(const UpdateCheck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateCheck(UpdateCheck&& from) noexcept
    : UpdateCheck() {
    *this = ::std::move(from);
  }

  inline UpdateCheck& operator=(UpdateCheck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateCheck& default_instance();

  static inline const UpdateCheck* internal_default_instance() {
    return reinterpret_cast<const UpdateCheck*>(
               &_UpdateCheck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(UpdateCheck* other);
  friend void swap(UpdateCheck& a, UpdateCheck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateCheck& from);
  void MergeFrom(const UpdateCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 V = 1;
  void clear_v();
  static const int kVFieldNumber = 1;
  ::google::protobuf::uint32 v() const;
  void set_v(::google::protobuf::uint32 value);

  // uint32 ID = 2;
  void clear_id();
  static const int kIDFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UpdateCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 v_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdateStatus) */ {
 public:
  UpdateStatus();
  virtual ~UpdateStatus();

  UpdateStatus(const UpdateStatus& from);

  inline UpdateStatus& operator=(const UpdateStatus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateStatus(UpdateStatus&& from) noexcept
    : UpdateStatus() {
    *this = ::std::move(from);
  }

  inline UpdateStatus& operator=(UpdateStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateStatus& default_instance();

  static inline const UpdateStatus* internal_default_instance() {
    return reinterpret_cast<const UpdateStatus*>(
               &_UpdateStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(UpdateStatus* other);
  friend void swap(UpdateStatus& a, UpdateStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateStatus& from);
  void MergeFrom(const UpdateStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool successful = 1;
  void clear_successful();
  static const int kSuccessfulFieldNumber = 1;
  bool successful() const;
  void set_successful(bool value);

  // @@protoc_insertion_point(class_scope:UpdateStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool successful_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OrgChallenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OrgChallenge) */ {
 public:
  OrgChallenge();
  virtual ~OrgChallenge();

  OrgChallenge(const OrgChallenge& from);

  inline OrgChallenge& operator=(const OrgChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OrgChallenge(OrgChallenge&& from) noexcept
    : OrgChallenge() {
    *this = ::std::move(from);
  }

  inline OrgChallenge& operator=(OrgChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OrgChallenge& default_instance();

  static inline const OrgChallenge* internal_default_instance() {
    return reinterpret_cast<const OrgChallenge*>(
               &_OrgChallenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OrgChallenge* other);
  friend void swap(OrgChallenge& a, OrgChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OrgChallenge* New() const PROTOBUF_FINAL { return New(NULL); }

  OrgChallenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OrgChallenge& from);
  void MergeFrom(const OrgChallenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OrgChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 NG = 1;
  void clear_ng();
  static const int kNGFieldNumber = 1;
  ::google::protobuf::uint64 ng() const;
  void set_ng(::google::protobuf::uint64 value);

  // uint32 IG = 2;
  void clear_ig();
  static const int kIGFieldNumber = 2;
  ::google::protobuf::uint32 ig() const;
  void set_ig(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OrgChallenge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ng_;
  ::google::protobuf::uint32 ig_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeviceChallenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeviceChallenge) */ {
 public:
  DeviceChallenge();
  virtual ~DeviceChallenge();

  DeviceChallenge(const DeviceChallenge& from);

  inline DeviceChallenge& operator=(const DeviceChallenge& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeviceChallenge(DeviceChallenge&& from) noexcept
    : DeviceChallenge() {
    *this = ::std::move(from);
  }

  inline DeviceChallenge& operator=(DeviceChallenge&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceChallenge& default_instance();

  static inline const DeviceChallenge* internal_default_instance() {
    return reinterpret_cast<const DeviceChallenge*>(
               &_DeviceChallenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(DeviceChallenge* other);
  friend void swap(DeviceChallenge& a, DeviceChallenge& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeviceChallenge* New() const PROTOBUF_FINAL { return New(NULL); }

  DeviceChallenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeviceChallenge& from);
  void MergeFrom(const DeviceChallenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeviceChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 NG = 1;
  void clear_ng();
  static const int kNGFieldNumber = 1;
  ::google::protobuf::uint64 ng() const;
  void set_ng(::google::protobuf::uint64 value);

  // uint64 ND = 2;
  void clear_nd();
  static const int kNDFieldNumber = 2;
  ::google::protobuf::uint64 nd() const;
  void set_nd(::google::protobuf::uint64 value);

  // uint32 ID = 3;
  void clear_id();
  static const int kIDFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DeviceChallenge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 ng_;
  ::google::protobuf::uint64 nd_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdatingOrgResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpdatingOrgResponse) */ {
 public:
  UpdatingOrgResponse();
  virtual ~UpdatingOrgResponse();

  UpdatingOrgResponse(const UpdatingOrgResponse& from);

  inline UpdatingOrgResponse& operator=(const UpdatingOrgResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdatingOrgResponse(UpdatingOrgResponse&& from) noexcept
    : UpdatingOrgResponse() {
    *this = ::std::move(from);
  }

  inline UpdatingOrgResponse& operator=(UpdatingOrgResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdatingOrgResponse& default_instance();

  static inline const UpdatingOrgResponse* internal_default_instance() {
    return reinterpret_cast<const UpdatingOrgResponse*>(
               &_UpdatingOrgResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(UpdatingOrgResponse* other);
  friend void swap(UpdatingOrgResponse& a, UpdatingOrgResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdatingOrgResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdatingOrgResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdatingOrgResponse& from);
  void MergeFrom(const UpdatingOrgResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdatingOrgResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 ND = 1;
  void clear_nd();
  static const int kNDFieldNumber = 1;
  ::google::protobuf::uint64 nd() const;
  void set_nd(::google::protobuf::uint64 value);

  // uint32 IG = 2;
  void clear_ig();
  static const int kIGFieldNumber = 2;
  ::google::protobuf::uint32 ig() const;
  void set_ig(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:UpdatingOrgResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 nd_;
  ::google::protobuf::uint32 ig_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ConfirmingOrgResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ConfirmingOrgResponse) */ {
 public:
  ConfirmingOrgResponse();
  virtual ~ConfirmingOrgResponse();

  ConfirmingOrgResponse(const ConfirmingOrgResponse& from);

  inline ConfirmingOrgResponse& operator=(const ConfirmingOrgResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfirmingOrgResponse(ConfirmingOrgResponse&& from) noexcept
    : ConfirmingOrgResponse() {
    *this = ::std::move(from);
  }

  inline ConfirmingOrgResponse& operator=(ConfirmingOrgResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfirmingOrgResponse& default_instance();

  static inline const ConfirmingOrgResponse* internal_default_instance() {
    return reinterpret_cast<const ConfirmingOrgResponse*>(
               &_ConfirmingOrgResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ConfirmingOrgResponse* other);
  friend void swap(ConfirmingOrgResponse& a, ConfirmingOrgResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfirmingOrgResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfirmingOrgResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfirmingOrgResponse& from);
  void MergeFrom(const ConfirmingOrgResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfirmingOrgResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes HC = 3;
  void clear_hc();
  static const int kHCFieldNumber = 3;
  const ::std::string& hc() const;
  void set_hc(const ::std::string& value);
  #if LANG_CXX11
  void set_hc(::std::string&& value);
  #endif
  void set_hc(const char* value);
  void set_hc(const void* value, size_t size);
  ::std::string* mutable_hc();
  ::std::string* release_hc();
  void set_allocated_hc(::std::string* hc);

  // uint64 ND = 1;
  void clear_nd();
  static const int kNDFieldNumber = 1;
  ::google::protobuf::uint64 nd() const;
  void set_nd(::google::protobuf::uint64 value);

  // uint32 IG = 2;
  void clear_ig();
  static const int kIGFieldNumber = 2;
  ::google::protobuf::uint32 ig() const;
  void set_ig(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ConfirmingOrgResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hc_;
  ::google::protobuf::uint64 nd_;
  ::google::protobuf::uint32 ig_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class M1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:M1) */ {
 public:
  M1();
  virtual ~M1();

  M1(const M1& from);

  inline M1& operator=(const M1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  M1(M1&& from) noexcept
    : M1() {
    *this = ::std::move(from);
  }

  inline M1& operator=(M1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const M1& default_instance();

  static inline const M1* internal_default_instance() {
    return reinterpret_cast<const M1*>(
               &_M1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(M1* other);
  friend void swap(M1& a, M1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline M1* New() const PROTOBUF_FINAL { return New(NULL); }

  M1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const M1& from);
  void MergeFrom(const M1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(M1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes OC = 2;
  void clear_oc();
  static const int kOCFieldNumber = 2;
  const ::std::string& oc() const;
  void set_oc(const ::std::string& value);
  #if LANG_CXX11
  void set_oc(::std::string&& value);
  #endif
  void set_oc(const char* value);
  void set_oc(const void* value, size_t size);
  ::std::string* mutable_oc();
  ::std::string* release_oc();
  void set_allocated_oc(::std::string* oc);

  // uint32 V = 1;
  void clear_v();
  static const int kVFieldNumber = 1;
  ::google::protobuf::uint32 v() const;
  void set_v(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:M1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oc_;
  ::google::protobuf::uint32 v_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class M2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:M2) */ {
 public:
  M2();
  virtual ~M2();

  M2(const M2& from);

  inline M2& operator=(const M2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  M2(M2&& from) noexcept
    : M2() {
    *this = ::std::move(from);
  }

  inline M2& operator=(M2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const M2& default_instance();

  static inline const M2* internal_default_instance() {
    return reinterpret_cast<const M2*>(
               &_M2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(M2* other);
  friend void swap(M2& a, M2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline M2* New() const PROTOBUF_FINAL { return New(NULL); }

  M2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const M2& from);
  void MergeFrom(const M2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(M2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes DC = 1;
  void clear_dc();
  static const int kDCFieldNumber = 1;
  const ::std::string& dc() const;
  void set_dc(const ::std::string& value);
  #if LANG_CXX11
  void set_dc(::std::string&& value);
  #endif
  void set_dc(const char* value);
  void set_dc(const void* value, size_t size);
  ::std::string* mutable_dc();
  ::std::string* release_dc();
  void set_allocated_dc(::std::string* dc);

  // @@protoc_insertion_point(class_scope:M2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dc_;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class M3 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:M3) */ {
 public:
  M3();
  virtual ~M3();

  M3(const M3& from);

  inline M3& operator=(const M3& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  M3(M3&& from) noexcept
    : M3() {
    *this = ::std::move(from);
  }

  inline M3& operator=(M3&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const M3& default_instance();

  static inline const M3* internal_default_instance() {
    return reinterpret_cast<const M3*>(
               &_M3_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(M3* other);
  friend void swap(M3& a, M3& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline M3* New() const PROTOBUF_FINAL { return New(NULL); }

  M3* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const M3& from);
  void MergeFrom(const M3& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(M3* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes OR = 1;
  void clear_or_();
  static const int kORFieldNumber = 1;
  const ::std::string& or_() const;
  void set_or_(const ::std::string& value);
  #if LANG_CXX11
  void set_or_(::std::string&& value);
  #endif
  void set_or_(const char* value);
  void set_or_(const void* value, size_t size);
  ::std::string* mutable_or_();
  ::std::string* release_or_();
  void set_allocated_or_(::std::string* or_);

  // @@protoc_insertion_point(class_scope:M3)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr or__;
  mutable int _cached_size_;
  friend struct protobuf_protocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// UpdateCheck

// uint32 V = 1;
inline void UpdateCheck::clear_v() {
  v_ = 0u;
}
inline ::google::protobuf::uint32 UpdateCheck::v() const {
  // @@protoc_insertion_point(field_get:UpdateCheck.V)
  return v_;
}
inline void UpdateCheck::set_v(::google::protobuf::uint32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:UpdateCheck.V)
}

// uint32 ID = 2;
inline void UpdateCheck::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 UpdateCheck::id() const {
  // @@protoc_insertion_point(field_get:UpdateCheck.ID)
  return id_;
}
inline void UpdateCheck::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:UpdateCheck.ID)
}

// -------------------------------------------------------------------

// UpdateStatus

// bool successful = 1;
inline void UpdateStatus::clear_successful() {
  successful_ = false;
}
inline bool UpdateStatus::successful() const {
  // @@protoc_insertion_point(field_get:UpdateStatus.successful)
  return successful_;
}
inline void UpdateStatus::set_successful(bool value) {
  
  successful_ = value;
  // @@protoc_insertion_point(field_set:UpdateStatus.successful)
}

// -------------------------------------------------------------------

// OrgChallenge

// uint64 NG = 1;
inline void OrgChallenge::clear_ng() {
  ng_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OrgChallenge::ng() const {
  // @@protoc_insertion_point(field_get:OrgChallenge.NG)
  return ng_;
}
inline void OrgChallenge::set_ng(::google::protobuf::uint64 value) {
  
  ng_ = value;
  // @@protoc_insertion_point(field_set:OrgChallenge.NG)
}

// uint32 IG = 2;
inline void OrgChallenge::clear_ig() {
  ig_ = 0u;
}
inline ::google::protobuf::uint32 OrgChallenge::ig() const {
  // @@protoc_insertion_point(field_get:OrgChallenge.IG)
  return ig_;
}
inline void OrgChallenge::set_ig(::google::protobuf::uint32 value) {
  
  ig_ = value;
  // @@protoc_insertion_point(field_set:OrgChallenge.IG)
}

// -------------------------------------------------------------------

// DeviceChallenge

// uint64 NG = 1;
inline void DeviceChallenge::clear_ng() {
  ng_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DeviceChallenge::ng() const {
  // @@protoc_insertion_point(field_get:DeviceChallenge.NG)
  return ng_;
}
inline void DeviceChallenge::set_ng(::google::protobuf::uint64 value) {
  
  ng_ = value;
  // @@protoc_insertion_point(field_set:DeviceChallenge.NG)
}

// uint64 ND = 2;
inline void DeviceChallenge::clear_nd() {
  nd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DeviceChallenge::nd() const {
  // @@protoc_insertion_point(field_get:DeviceChallenge.ND)
  return nd_;
}
inline void DeviceChallenge::set_nd(::google::protobuf::uint64 value) {
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:DeviceChallenge.ND)
}

// uint32 ID = 3;
inline void DeviceChallenge::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 DeviceChallenge::id() const {
  // @@protoc_insertion_point(field_get:DeviceChallenge.ID)
  return id_;
}
inline void DeviceChallenge::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:DeviceChallenge.ID)
}

// -------------------------------------------------------------------

// UpdatingOrgResponse

// uint64 ND = 1;
inline void UpdatingOrgResponse::clear_nd() {
  nd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 UpdatingOrgResponse::nd() const {
  // @@protoc_insertion_point(field_get:UpdatingOrgResponse.ND)
  return nd_;
}
inline void UpdatingOrgResponse::set_nd(::google::protobuf::uint64 value) {
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:UpdatingOrgResponse.ND)
}

// uint32 IG = 2;
inline void UpdatingOrgResponse::clear_ig() {
  ig_ = 0u;
}
inline ::google::protobuf::uint32 UpdatingOrgResponse::ig() const {
  // @@protoc_insertion_point(field_get:UpdatingOrgResponse.IG)
  return ig_;
}
inline void UpdatingOrgResponse::set_ig(::google::protobuf::uint32 value) {
  
  ig_ = value;
  // @@protoc_insertion_point(field_set:UpdatingOrgResponse.IG)
}

// -------------------------------------------------------------------

// ConfirmingOrgResponse

// uint64 ND = 1;
inline void ConfirmingOrgResponse::clear_nd() {
  nd_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ConfirmingOrgResponse::nd() const {
  // @@protoc_insertion_point(field_get:ConfirmingOrgResponse.ND)
  return nd_;
}
inline void ConfirmingOrgResponse::set_nd(::google::protobuf::uint64 value) {
  
  nd_ = value;
  // @@protoc_insertion_point(field_set:ConfirmingOrgResponse.ND)
}

// uint32 IG = 2;
inline void ConfirmingOrgResponse::clear_ig() {
  ig_ = 0u;
}
inline ::google::protobuf::uint32 ConfirmingOrgResponse::ig() const {
  // @@protoc_insertion_point(field_get:ConfirmingOrgResponse.IG)
  return ig_;
}
inline void ConfirmingOrgResponse::set_ig(::google::protobuf::uint32 value) {
  
  ig_ = value;
  // @@protoc_insertion_point(field_set:ConfirmingOrgResponse.IG)
}

// bytes HC = 3;
inline void ConfirmingOrgResponse::clear_hc() {
  hc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfirmingOrgResponse::hc() const {
  // @@protoc_insertion_point(field_get:ConfirmingOrgResponse.HC)
  return hc_.GetNoArena();
}
inline void ConfirmingOrgResponse::set_hc(const ::std::string& value) {
  
  hc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ConfirmingOrgResponse.HC)
}
#if LANG_CXX11
inline void ConfirmingOrgResponse::set_hc(::std::string&& value) {
  
  hc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ConfirmingOrgResponse.HC)
}
#endif
inline void ConfirmingOrgResponse::set_hc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ConfirmingOrgResponse.HC)
}
inline void ConfirmingOrgResponse::set_hc(const void* value, size_t size) {
  
  hc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ConfirmingOrgResponse.HC)
}
inline ::std::string* ConfirmingOrgResponse::mutable_hc() {
  
  // @@protoc_insertion_point(field_mutable:ConfirmingOrgResponse.HC)
  return hc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfirmingOrgResponse::release_hc() {
  // @@protoc_insertion_point(field_release:ConfirmingOrgResponse.HC)
  
  return hc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfirmingOrgResponse::set_allocated_hc(::std::string* hc) {
  if (hc != NULL) {
    
  } else {
    
  }
  hc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hc);
  // @@protoc_insertion_point(field_set_allocated:ConfirmingOrgResponse.HC)
}

// -------------------------------------------------------------------

// M1

// uint32 V = 1;
inline void M1::clear_v() {
  v_ = 0u;
}
inline ::google::protobuf::uint32 M1::v() const {
  // @@protoc_insertion_point(field_get:M1.V)
  return v_;
}
inline void M1::set_v(::google::protobuf::uint32 value) {
  
  v_ = value;
  // @@protoc_insertion_point(field_set:M1.V)
}

// bytes OC = 2;
inline void M1::clear_oc() {
  oc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& M1::oc() const {
  // @@protoc_insertion_point(field_get:M1.OC)
  return oc_.GetNoArena();
}
inline void M1::set_oc(const ::std::string& value) {
  
  oc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:M1.OC)
}
#if LANG_CXX11
inline void M1::set_oc(::std::string&& value) {
  
  oc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:M1.OC)
}
#endif
inline void M1::set_oc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:M1.OC)
}
inline void M1::set_oc(const void* value, size_t size) {
  
  oc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:M1.OC)
}
inline ::std::string* M1::mutable_oc() {
  
  // @@protoc_insertion_point(field_mutable:M1.OC)
  return oc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* M1::release_oc() {
  // @@protoc_insertion_point(field_release:M1.OC)
  
  return oc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void M1::set_allocated_oc(::std::string* oc) {
  if (oc != NULL) {
    
  } else {
    
  }
  oc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oc);
  // @@protoc_insertion_point(field_set_allocated:M1.OC)
}

// -------------------------------------------------------------------

// M2

// bytes DC = 1;
inline void M2::clear_dc() {
  dc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& M2::dc() const {
  // @@protoc_insertion_point(field_get:M2.DC)
  return dc_.GetNoArena();
}
inline void M2::set_dc(const ::std::string& value) {
  
  dc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:M2.DC)
}
#if LANG_CXX11
inline void M2::set_dc(::std::string&& value) {
  
  dc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:M2.DC)
}
#endif
inline void M2::set_dc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:M2.DC)
}
inline void M2::set_dc(const void* value, size_t size) {
  
  dc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:M2.DC)
}
inline ::std::string* M2::mutable_dc() {
  
  // @@protoc_insertion_point(field_mutable:M2.DC)
  return dc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* M2::release_dc() {
  // @@protoc_insertion_point(field_release:M2.DC)
  
  return dc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void M2::set_allocated_dc(::std::string* dc) {
  if (dc != NULL) {
    
  } else {
    
  }
  dc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dc);
  // @@protoc_insertion_point(field_set_allocated:M2.DC)
}

// -------------------------------------------------------------------

// M3

// bytes OR = 1;
inline void M3::clear_or_() {
  or__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& M3::or_() const {
  // @@protoc_insertion_point(field_get:M3.OR)
  return or__.GetNoArena();
}
inline void M3::set_or_(const ::std::string& value) {
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:M3.OR)
}
#if LANG_CXX11
inline void M3::set_or_(::std::string&& value) {
  
  or__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:M3.OR)
}
#endif
inline void M3::set_or_(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:M3.OR)
}
inline void M3::set_or_(const void* value, size_t size) {
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:M3.OR)
}
inline ::std::string* M3::mutable_or_() {
  
  // @@protoc_insertion_point(field_mutable:M3.OR)
  return or__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* M3::release_or_() {
  // @@protoc_insertion_point(field_release:M3.OR)
  
  return or__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void M3::set_allocated_or_(::std::string* or_) {
  if (or_ != NULL) {
    
  } else {
    
  }
  or__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), or_);
  // @@protoc_insertion_point(field_set_allocated:M3.OR)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2eproto__INCLUDED
