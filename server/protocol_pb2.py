# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protocol.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='protocol.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x0eprotocol.proto\"$\n\x0bUpdateCheck\x12\t\n\x01V\x18\x01 \x01(\r\x12\n\n\x02ID\x18\x02 \x01(\r\"\"\n\x0cUpdateStatus\x12\x12\n\nsuccessful\x18\x01 \x01(\x08\"&\n\x0cOrgChallenge\x12\n\n\x02NG\x18\x01 \x01(\x04\x12\n\n\x02IG\x18\x02 \x01(\r\"5\n\x0f\x44\x65viceChallenge\x12\n\n\x02NG\x18\x01 \x01(\x04\x12\n\n\x02ND\x18\x02 \x01(\x04\x12\n\n\x02ID\x18\x03 \x01(\r\"1\n\x0bOrgResponse\x12\n\n\x02ND\x18\x01 \x01(\x04\x12\n\n\x02IG\x18\x02 \x01(\r\x12\n\n\x02HC\x18\x03 \x01(\x0c\"\x1b\n\x02M1\x12\t\n\x01V\x18\x01 \x01(\r\x12\n\n\x02OC\x18\x02 \x01(\x0c\"\x10\n\x02M2\x12\n\n\x02\x44\x43\x18\x01 \x01(\x0c\"\x10\n\x02M3\x12\n\n\x02OR\x18\x01 \x01(\x0c\"\x1b\n\x0bUpdateImage\x12\x0c\n\x04size\x18\x01 \x01(\rb\x06proto3')
)




_UPDATECHECK = _descriptor.Descriptor(
  name='UpdateCheck',
  full_name='UpdateCheck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='V', full_name='UpdateCheck.V', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ID', full_name='UpdateCheck.ID', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=18,
  serialized_end=54,
)


_UPDATESTATUS = _descriptor.Descriptor(
  name='UpdateStatus',
  full_name='UpdateStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='successful', full_name='UpdateStatus.successful', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=90,
)


_ORGCHALLENGE = _descriptor.Descriptor(
  name='OrgChallenge',
  full_name='OrgChallenge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='NG', full_name='OrgChallenge.NG', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='IG', full_name='OrgChallenge.IG', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=92,
  serialized_end=130,
)


_DEVICECHALLENGE = _descriptor.Descriptor(
  name='DeviceChallenge',
  full_name='DeviceChallenge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='NG', full_name='DeviceChallenge.NG', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ND', full_name='DeviceChallenge.ND', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ID', full_name='DeviceChallenge.ID', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=132,
  serialized_end=185,
)


_ORGRESPONSE = _descriptor.Descriptor(
  name='OrgResponse',
  full_name='OrgResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ND', full_name='OrgResponse.ND', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='IG', full_name='OrgResponse.IG', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='HC', full_name='OrgResponse.HC', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=187,
  serialized_end=236,
)


_M1 = _descriptor.Descriptor(
  name='M1',
  full_name='M1',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='V', full_name='M1.V', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='OC', full_name='M1.OC', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=238,
  serialized_end=265,
)


_M2 = _descriptor.Descriptor(
  name='M2',
  full_name='M2',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='DC', full_name='M2.DC', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=267,
  serialized_end=283,
)


_M3 = _descriptor.Descriptor(
  name='M3',
  full_name='M3',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='OR', full_name='M3.OR', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=285,
  serialized_end=301,
)


_UPDATEIMAGE = _descriptor.Descriptor(
  name='UpdateImage',
  full_name='UpdateImage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='UpdateImage.size', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=303,
  serialized_end=330,
)

DESCRIPTOR.message_types_by_name['UpdateCheck'] = _UPDATECHECK
DESCRIPTOR.message_types_by_name['UpdateStatus'] = _UPDATESTATUS
DESCRIPTOR.message_types_by_name['OrgChallenge'] = _ORGCHALLENGE
DESCRIPTOR.message_types_by_name['DeviceChallenge'] = _DEVICECHALLENGE
DESCRIPTOR.message_types_by_name['OrgResponse'] = _ORGRESPONSE
DESCRIPTOR.message_types_by_name['M1'] = _M1
DESCRIPTOR.message_types_by_name['M2'] = _M2
DESCRIPTOR.message_types_by_name['M3'] = _M3
DESCRIPTOR.message_types_by_name['UpdateImage'] = _UPDATEIMAGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

UpdateCheck = _reflection.GeneratedProtocolMessageType('UpdateCheck', (_message.Message,), dict(
  DESCRIPTOR = _UPDATECHECK,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:UpdateCheck)
  ))
_sym_db.RegisterMessage(UpdateCheck)

UpdateStatus = _reflection.GeneratedProtocolMessageType('UpdateStatus', (_message.Message,), dict(
  DESCRIPTOR = _UPDATESTATUS,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:UpdateStatus)
  ))
_sym_db.RegisterMessage(UpdateStatus)

OrgChallenge = _reflection.GeneratedProtocolMessageType('OrgChallenge', (_message.Message,), dict(
  DESCRIPTOR = _ORGCHALLENGE,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:OrgChallenge)
  ))
_sym_db.RegisterMessage(OrgChallenge)

DeviceChallenge = _reflection.GeneratedProtocolMessageType('DeviceChallenge', (_message.Message,), dict(
  DESCRIPTOR = _DEVICECHALLENGE,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:DeviceChallenge)
  ))
_sym_db.RegisterMessage(DeviceChallenge)

OrgResponse = _reflection.GeneratedProtocolMessageType('OrgResponse', (_message.Message,), dict(
  DESCRIPTOR = _ORGRESPONSE,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:OrgResponse)
  ))
_sym_db.RegisterMessage(OrgResponse)

M1 = _reflection.GeneratedProtocolMessageType('M1', (_message.Message,), dict(
  DESCRIPTOR = _M1,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:M1)
  ))
_sym_db.RegisterMessage(M1)

M2 = _reflection.GeneratedProtocolMessageType('M2', (_message.Message,), dict(
  DESCRIPTOR = _M2,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:M2)
  ))
_sym_db.RegisterMessage(M2)

M3 = _reflection.GeneratedProtocolMessageType('M3', (_message.Message,), dict(
  DESCRIPTOR = _M3,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:M3)
  ))
_sym_db.RegisterMessage(M3)

UpdateImage = _reflection.GeneratedProtocolMessageType('UpdateImage', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEIMAGE,
  __module__ = 'protocol_pb2'
  # @@protoc_insertion_point(class_scope:UpdateImage)
  ))
_sym_db.RegisterMessage(UpdateImage)


# @@protoc_insertion_point(module_scope)
